%% 
%     COURSE: Master MATLAB through guided problem-solving
%    SECTION: Command statements
%      VIDEO: Random count-down timer (Poisson-like)
% Instructor: mikexcohen.com
%
%%

% set threshold
thresh = exp(-10)

% initialize initial value
[currval,startval] = deal( 10 );

% number of repetitions for samples
nReps = 100;

% decay process
decayvar = nan(nReps,1000);

for repi = 1 : nReps
    
    % counter
    counter = 0;
    currval = startval;
    % stay in loop as long as needed
    while currval>thresh
        
        % increase counter
        counter = counter + 1;
        
        % update decay variable
        decayvar(repi,counter+1) = currval;
        
        % decrease target by random fraction ([0 1])
        currval = currval * rand^(1/2)
        
    end
end

%% without stats tool box
for i = 1 : size(decayvar,2)
   decayvarAvg = mean(decayvar(isfinite(decayvar(:,i)),1));
end

% plot the results
figure(1), clf
plot(decayvarAvg,'ks-','linew',2,'markersize',15,'markerfacecolor','w')
xlabel('Iterations'), ylabel('Value')
title([ num2str(counter) ' iterations until threshold' ])

%% with nanmean
% plot the results
figure(1), clf
plot(nanmean(decayvar,1),'ks-','linew',2,'markersize',15,'markerfacecolor','w')
xlabel('Iterations'), ylabel('Value')
title([ num2str(counter) ' iterations until threshold' ])
